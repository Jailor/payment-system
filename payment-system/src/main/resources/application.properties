spring.datasource.url= jdbc:postgresql://localhost:5432/payment_system
spring.datasource.username=internship
spring.datasource.password=internship

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false

spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true

# custom
custom.token=7377364371982521421asfa#@#$afzxc%$#5
custom.fraud-url=http://localhost:5000/predict
custom.home.latitude=46.75
custom.home.longitude=23.59
custom.geocoding.url=https://api.opencagedata.com/geocode/v1/json
custom.geocoding.key=1576541044ae4f49a80e259ac42d9f6c
custom.check-fraud=true
custom.check-password=false
custom.n-eyes=false

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/payment-system.p12
# The password used to generate the certificate
server.ssl.key-store-password=payment-system
# The alias mapped to the certificate
server.ssl.key-alias=payment-system
server.ssl.enabled=true
server.port=443

spring.security.filter.order=10

spring.security.user.name=admin
spring.security.user.password=admin

spring.thymeleaf.check-template-location=false